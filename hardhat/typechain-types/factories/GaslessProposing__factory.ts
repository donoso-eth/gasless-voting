/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GaslessProposing,
  GaslessProposingInterface,
} from "../GaslessProposing";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "_createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatus",
    outputs: [
      {
        internalType: "enum ProposalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405262015180600090815560018190556002805460ff1916905560035534801561002b57600080fd5b506109a48061003b6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634e69d560116100505780634e69d5601461009f57806350928198146100b2578063f0867a84146100c357600080fd5b806304ba7f381461006c5780630bd464e71461008a575b600080fd5b6100746100d6565b60405161008191906108a1565b60405180910390f35b61009d6100983660046107ec565b610168565b005b60025460ff1660405161008191906108b4565b600354604051908152602001610081565b61009d6100d13660046107ec565b610218565b6060600480546100e59061090c565b80601f01602080910402602001604051908101604052809291908181526020018280546101119061090c565b801561015e5780601f106101335761010080835404028352916020019161015e565b820191906000526020600020905b81548152906001019060200180831161014157829003601f168201915b5050505050905090565b600060025460ff16600181111561018f57634e487b7160e01b600052602160045260246000fd5b146101e15760405162461bcd60e51b815260206004820152601960248201527f4f4c445f50524f504f53414c5f5354494c4c5f4143544956450000000000000060448201526064015b60405180910390fd5b600180549060006101f183610947565b90915550506002805460ff19166001179055426003556102136004838361072c565b505050565b73abcc9b596420a9e9172fd5938620e265a0f9df92331461027b5760405162461bcd60e51b815260206004820152600f60248201527f6f6e6c7947656c61746f52656c6179000000000000000000000000000000000060448201526064016101d8565b6102858282610168565b61028d610291565b5050565b6102bc36604719013560601c36601f19013536603319013560601c6001600160a01b031691906102be565b565b806102c857505050565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610300576102136001600160a01b038416838361030a565b610213828261038a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526102139084906104a3565b804710156103da5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016101d8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610427576040519150601f19603f3d011682016040523d82523d6000602084013e61042c565b606091505b50509050806102135760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016101d8565b60006104f8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105889092919063ffffffff16565b805190915015610213578080602001905181019061051691906107c5565b6102135760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016101d8565b6060610597848460008561059f565b949350505050565b6060824710156106175760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016101d8565b600080866001600160a01b031685876040516106339190610885565b60006040518083038185875af1925050503d8060008114610670576040519150601f19603f3d011682016040523d82523d6000602084013e610675565b606091505b509150915061068687838387610691565b979650505050505050565b606083156106fd5782516106f6576001600160a01b0385163b6106f65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d8565b5081610597565b61059783838151156107125781518083602001fd5b8060405162461bcd60e51b81526004016101d891906108a1565b8280546107389061090c565b90600052602060002090601f01602090048101928261075a57600085556107a0565b82601f106107735782800160ff198235161785556107a0565b828001600101855582156107a0579182015b828111156107a0578235825591602001919060010190610785565b506107ac9291506107b0565b5090565b5b808211156107ac57600081556001016107b1565b6000602082840312156107d6578081fd5b815180151581146107e5578182fd5b9392505050565b600080602083850312156107fe578081fd5b823567ffffffffffffffff80821115610815578283fd5b818501915085601f830112610828578283fd5b813581811115610836578384fd5b866020828501011115610847578384fd5b60209290920196919550909350505050565b600081518084526108718160208601602086016108dc565b601f01601f19169290920160200192915050565b600082516108978184602087016108dc565b9190910192915050565b6020815260006107e56020830184610859565b60208101600283106108d657634e487b7160e01b600052602160045260246000fd5b91905290565b60005b838110156108f75781810151838201526020016108df565b83811115610906576000848401525b50505050565b600181811c9082168061092057607f821691505b6020821081141561094157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561096757634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220c43ebd13457df7fae04e3b01d4201d7acaf7f952222be7d7d3ae0f46ae91523164736f6c63430008040033";

type GaslessProposingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaslessProposingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaslessProposing__factory extends ContractFactory {
  constructor(...args: GaslessProposingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GaslessProposing> {
    return super.deploy(overrides || {}) as Promise<GaslessProposing>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GaslessProposing {
    return super.attach(address) as GaslessProposing;
  }
  connect(signer: Signer): GaslessProposing__factory {
    return super.connect(signer) as GaslessProposing__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaslessProposingInterface {
    return new utils.Interface(_abi) as GaslessProposingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaslessProposing {
    return new Contract(address, _abi, signerOrProvider) as GaslessProposing;
  }
}
