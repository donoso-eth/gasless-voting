/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GaslessProposing,
  GaslessProposingInterface,
} from "../GaslessProposing";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "title",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "description",
        type: "bytes",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405262015180600090815560018190556002805460ff1916905560035534801561002b57600080fd5b506107a88061003b6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806376031eb414610030575b600080fd5b61004361003e366004610663565b610045565b005b73abcc9b596420a9e9172fd5938620e265a0f9df9233146100ad5760405162461bcd60e51b815260206004820152600f60248201527f6f6e6c7947656c61746f52656c6179000000000000000000000000000000000060448201526064015b60405180910390fd5b600060025460ff1660018111156100d457634e487b7160e01b600052602160045260246000fd5b146101215760405162461bcd60e51b815260206004820152601960248201527f4f4c445f50524f504f53414c5f5354494c4c5f4143544956450000000000000060448201526064016100a4565b610129610155565b600180549060006101398361074b565b90915550506002805460ff191660011790555050426003555050565b61018036604719013560601c36601f19013536603319013560601c6001600160a01b03169190610182565b565b8061018c57505050565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146101c9576101c46001600160a01b03841683836101d3565b505050565b6101c48282610253565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526101c490849061036c565b804710156102a35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100a4565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146102f0576040519150601f19603f3d011682016040523d82523d6000602084013e6102f5565b606091505b50509050806101c45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100a4565b60006103c1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104519092919063ffffffff16565b8051909150156101c457808060200190518101906103df919061063c565b6101c45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016100a4565b60606104608484600085610468565b949350505050565b6060824710156104e05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016100a4565b600080866001600160a01b031685876040516104fc91906106cc565b60006040518083038185875af1925050503d8060008114610539576040519150601f19603f3d011682016040523d82523d6000602084013e61053e565b606091505b509150915061054f8783838761055a565b979650505050505050565b606083156105c65782516105bf576001600160a01b0385163b6105bf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100a4565b5081610460565b61046083838151156105db5781518083602001fd5b8060405162461bcd60e51b81526004016100a491906106e8565b60008083601f840112610606578182fd5b50813567ffffffffffffffff81111561061d578182fd5b60208301915083602082850101111561063557600080fd5b9250929050565b60006020828403121561064d578081fd5b8151801515811461065c578182fd5b9392505050565b60008060008060408587031215610678578283fd5b843567ffffffffffffffff8082111561068f578485fd5b61069b888389016105f5565b909650945060208701359150808211156106b3578384fd5b506106c0878288016105f5565b95989497509550505050565b600082516106de81846020870161071b565b9190910192915050565b602081526000825180602084015261070781604085016020870161071b565b601f01601f19169190910160400192915050565b60005b8381101561073657818101518382015260200161071e565b83811115610745576000848401525b50505050565b600060001982141561076b57634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212209bfd011b5c328481600647a3321c94b97ccc08463002bad6db7b4c5e2f11850f64736f6c63430008040033";

type GaslessProposingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaslessProposingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaslessProposing__factory extends ContractFactory {
  constructor(...args: GaslessProposingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GaslessProposing> {
    return super.deploy(overrides || {}) as Promise<GaslessProposing>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GaslessProposing {
    return super.attach(address) as GaslessProposing;
  }
  connect(signer: Signer): GaslessProposing__factory {
    return super.connect(signer) as GaslessProposing__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaslessProposingInterface {
    return new utils.Interface(_abi) as GaslessProposingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaslessProposing {
    return new Contract(address, _abi, signerOrProvider) as GaslessProposing;
  }
}
