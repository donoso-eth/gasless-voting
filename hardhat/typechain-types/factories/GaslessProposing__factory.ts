/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GaslessProposing,
  GaslessProposingInterface,
} from "../GaslessProposing";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOps",
        name: "_ops",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "_createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceTreasuryTask",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gelato",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatus",
    outputs: [
      {
        internalType: "enum ProposalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ops",
    outputs: [
      {
        internalType: "contract IOps",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gaslessVoting",
        type: "address",
      },
    ],
    name: "setVotingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052610708600155600060028190556003805460ff1916905560045534801561002a57600080fd5b506040516116c13803806116c183398101604081905261004991610072565b600680546001600160a01b0319166001600160a01b0392909216919091179055336080526100a2565b60006020828403121561008457600080fd5b81516001600160a01b038116811461009b57600080fd5b9392505050565b6080516115fd6100c4600039600081816104bb015261057001526115fd6000f3fe6080604052600436106100cb5760003560e01c80636cd1d08611610074578063e70abe921161004e578063e70abe921461025b578063f0867a841461027b578063f90943031461029b57600080fd5b80636cd1d086146101fd5780638322fff214610213578063a069c1ac1461023b57600080fd5b80634e69d560116100a55780634e69d5601461018657806350928198146101a6578063573ea575146101c557600080fd5b806304ba7f38146101165780630bd464e7146101415780633ccfd60b1461016157600080fd5b366101115761010f6040518060400160405280600e81526020017f2d2d2d2d2d20726563656976653a000000000000000000000000000000000000815250346102b0565b005b600080fd5b34801561012257600080fd5b5061012b610312565b60405161013891906110f6565b60405180910390f35b34801561014d57600080fd5b5061010f61015c366004611110565b6103a4565b34801561016d57600080fd5b506101766104ae565b6040519015158152602001610138565b34801561019257600080fd5b5060035460ff166040516101389190611198565b3480156101b257600080fd5b506004545b604051908152602001610138565b3480156101d157600080fd5b506007546101e5906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b34801561020957600080fd5b506101b760085481565b34801561021f57600080fd5b506101e573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561024757600080fd5b5061010f6102563660046111ca565b610565565b34801561026757600080fd5b506006546101e5906001600160a01b031681565b34801561028757600080fd5b5061010f610296366004611110565b610604565b3480156102a757600080fd5b5061010f6107a3565b61030e82826040516024016102c69291906111e7565b60408051601f198184030181529190526020810180516001600160e01b03167fb60e72cc00000000000000000000000000000000000000000000000000000000179052610892565b5050565b60606005805461032190611209565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90611209565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b600060035460ff1660018111156103bd576103bd611182565b1461040f5760405162461bcd60e51b815260206004820152601960248201527f4f4c445f50524f504f53414c5f5354494c4c5f4143544956450000000000000060448201526064015b60405180910390fd5b6002805490600061041f83611259565b90915550506003805460ff191660011790554260045560056104428284836112ce565b50600054600254604051634529739960e11b81526001600160a01b0390921691638a52e73291610478918690869060040161138f565b600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105155760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b6044820152606401610406565b604051600090339047908381818185875af1925050503d8060008114610557576040519150601f19603f3d011682016040523d82523d6000602084013e61055c565b606091505b50909250505090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ca5760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b6044820152606401610406565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b73abcc9b596420a9e9172fd5938620e265a0f9df92331461068d5760405162461bcd60e51b815260206004820152602260248201527f47656c61746f52656c6179436f6e746578742e6f6e6c7947656c61746f52656c60448201527f61790000000000000000000000000000000000000000000000000000000000006064820152608401610406565b600060035460ff1660018111156106a6576106a6611182565b146106f35760405162461bcd60e51b815260206004820152601960248201527f4f4c445f50524f504f53414c5f5354494c4c5f414354495645000000000000006044820152606401610406565b6106fb6108b3565b6002805490600061070b83611259565b90915550506003805460ff1916600117905542600455600561072e8284836112ce565b50600054600254604051634529739960e11b81526001600160a01b0390921691638a52e73291610764918690869060040161138f565b600060405180830381600087803b15801561077e57600080fd5b505af1158015610792573d6000803e3d6000fd5b5050505061079e6108e0565b505050565b6006546001600160a01b031633146107fd5760405162461bcd60e51b815260206004820152601160248201527f4f707352656164793a206f6e6c794f70730000000000000000000000000000006044820152606401610406565b600654604080517fb810c636000000000000000000000000000000000000000000000000000000008152815160009384936001600160a01b039091169263b810c63692600480830193928290030181865afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088491906113c5565b9150915061030e8282610b24565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6108de6108be610bc7565b6108c6610bd6565b6108ce610be0565b6001600160a01b03169190610bea565b565b600080600154426108f191906113f5565b600154604080516fffffffffffffffffffffffffffffffff909316602084015282015260600160408051808303601f19018152600483526024830182526020830180517ff9094303000000000000000000000000000000000000000000000000000000006001600160e01b03909116179052815160028082526060820190935290935060009181602001602082028036833701905050905060018160008151811061099e5761099e61140e565b602002602001019060048111156109b7576109b7611182565b908160048111156109ca576109ca611182565b815250506003816001815181106109e3576109e361140e565b602002602001019060048111156109fc576109fc611182565b90816004811115610a0f57610a0f611182565b905250604080516001808252818301909252600091816020015b6060815260200190600190039081610a295790505090508381600081518110610a5457610a5461140e565b60209081029190910181019190915260408051808201825284815291820183905260065490517f3323b4670000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690633323b46790610ad79030908890869073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90600401611424565b6020604051808303816000875af1158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a919061151a565b9550505050505090565b6007546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610b71576040519150601f19603f3d011682016040523d82523d6000602084013e610b76565b606091505b505090508061079e5760405162461bcd60e51b815260206004820152601e60248201527f5f7472616e736665723a20455448207472616e73666572206661696c656400006044820152606401610406565b6000610bd1610c39565b905090565b6000610bd1610c60565b6000610bd1610c87565b80600003610bf757505050565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610c2f5761079e6001600160a01b0384168383610c96565b61079e8282610d01565b60008036610c48606082611533565b610c53928290611546565b810190610bd191906111ca565b60008036610c6f602082611533565b610c7a928290611546565b810190610bd19190611570565b60008036610c48604082611533565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b03167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261079e908490610e1a565b80471015610d515760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610406565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610d9e576040519150601f19603f3d011682016040523d82523d6000602084013e610da3565b606091505b505090508061079e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610406565b6000610e6f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610eff9092919063ffffffff16565b80519091501561079e5780806020019051810190610e8d9190611589565b61079e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610406565b6060610f0e8484600085610f16565b949350505050565b606082471015610f8e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610406565b600080866001600160a01b03168587604051610faa91906115ab565b60006040518083038185875af1925050503d8060008114610fe7576040519150601f19603f3d011682016040523d82523d6000602084013e610fec565b606091505b5091509150610ffd87838387611008565b979650505050505050565b60608315611077578251600003611070576001600160a01b0385163b6110705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610406565b5081610f0e565b610f0e838381511561108c5781518083602001fd5b8060405162461bcd60e51b815260040161040691906110f6565b60005b838110156110c15781810151838201526020016110a9565b50506000910152565b600081518084526110e28160208601602086016110a6565b601f01601f19169290920160200192915050565b60208152600061110960208301846110ca565b9392505050565b6000806020838503121561112357600080fd5b823567ffffffffffffffff8082111561113b57600080fd5b818501915085601f83011261114f57600080fd5b81358181111561115e57600080fd5b86602082850101111561117057600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052602160045260246000fd5b60208101600283106111ac576111ac611182565b91905290565b6001600160a01b03811681146111c757600080fd5b50565b6000602082840312156111dc57600080fd5b8135611109816111b2565b6040815260006111fa60408301856110ca565b90508260208301529392505050565b600181811c9082168061121d57607f821691505b60208210810361123d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161126b5761126b611243565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f82111561079e57600081815260208120601f850160051c810160208610156112af5750805b601f850160051c820191505b818110156104a6578281556001016112bb565b67ffffffffffffffff8311156112e6576112e6611272565b6112fa836112f48354611209565b83611288565b6000601f84116001811461132e57600085156113165750838201355b600019600387901b1c1916600186901b178355611388565b600083815260209020601f19861690835b8281101561135f578685013582556020948501946001909201910161133f565b508682101561137c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b600080604083850312156113d857600080fd5b8251915060208301516113ea816111b2565b809150509250929050565b8082018082111561140857611408611243565b92915050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03851681526000602060808184015261144760808401876110ca565b8381036040808601919091528651818352805191830182905283019060009060608401905b8083101561149c5783516005811061148657611486611182565b825292850192600192909201919085019061146c565b508885015184820394860194909452835180825281860194860193509150600582901b8101850160005b838110156114f457601f198383030186526114e28286516110ca565b958701959487019491506001016114c6565b506001600160a01b03891660608901529550611511945050505050565b95945050505050565b60006020828403121561152c57600080fd5b5051919050565b8181038181111561140857611408611243565b6000808585111561155657600080fd5b8386111561156357600080fd5b5050820193919092039150565b60006020828403121561158257600080fd5b5035919050565b60006020828403121561159b57600080fd5b8151801515811461110957600080fd5b600082516115bd8184602087016110a6565b919091019291505056fea2646970667358221220de30a35668816ef91d2b5df41c9c320be5636dd781b4e2663968dbb117899e8b64736f6c63430008110033";

type GaslessProposingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaslessProposingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaslessProposing__factory extends ContractFactory {
  constructor(...args: GaslessProposingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _ops: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GaslessProposing> {
    return super.deploy(_ops, overrides || {}) as Promise<GaslessProposing>;
  }
  getDeployTransaction(
    _ops: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ops, overrides || {});
  }
  attach(address: string): GaslessProposing {
    return super.attach(address) as GaslessProposing;
  }
  connect(signer: Signer): GaslessProposing__factory {
    return super.connect(signer) as GaslessProposing__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaslessProposingInterface {
    return new utils.Interface(_abi) as GaslessProposingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaslessProposing {
    return new Contract(address, _abi, signerOrProvider) as GaslessProposing;
  }
}
