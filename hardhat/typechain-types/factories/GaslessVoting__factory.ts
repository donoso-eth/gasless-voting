/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GaslessVoting, GaslessVotingInterface } from "../GaslessVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gasslessProposing",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ProposalVoted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "_createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_finishProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "positive",
        type: "bool",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "_votingProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentProposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "negative",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentProposalId",
            type: "uint256",
          },
          {
            internalType: "enum VotingStatus",
            name: "votingStatus",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct ProposalState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProsalStateById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "negative",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentProposalId",
            type: "uint256",
          },
          {
            internalType: "enum VotingStatus",
            name: "votingStatus",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct ProposalState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalState",
    outputs: [
      {
        internalType: "uint256",
        name: "positive",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "negative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentProposalId",
        type: "uint256",
      },
      {
        internalType: "enum VotingStatus",
        name: "votingStatus",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "positive",
        type: "bool",
      },
    ],
    name: "votingProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type GaslessVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaslessVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaslessVoting__factory extends ContractFactory {
  constructor(...args: GaslessVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _gasslessProposing: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GaslessVoting> {
    return super.deploy(
      _gasslessProposing,
      overrides || {}
    ) as Promise<GaslessVoting>;
  }
  getDeployTransaction(
    _gasslessProposing: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gasslessProposing, overrides || {});
  }
  attach(address: string): GaslessVoting {
    return super.attach(address) as GaslessVoting;
  }
  connect(signer: Signer): GaslessVoting__factory {
    return super.connect(signer) as GaslessVoting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaslessVotingInterface {
    return new utils.Interface(_abi) as GaslessVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaslessVoting {
    return new Contract(address, _abi, signerOrProvider) as GaslessVoting;
  }
}
