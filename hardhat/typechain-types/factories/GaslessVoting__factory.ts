/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GaslessVoting, GaslessVotingInterface } from "../GaslessVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gasslessProposing",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ProposalVoted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "_createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_finishProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "positive",
        type: "bool",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "_votingProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentProposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "negative",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentProposalId",
            type: "uint256",
          },
          {
            internalType: "enum VotingStatus",
            name: "votingStatus",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct ProposalState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProsalStateById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "negative",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentProposalId",
            type: "uint256",
          },
          {
            internalType: "enum VotingStatus",
            name: "votingStatus",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct ProposalState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalState",
    outputs: [
      {
        internalType: "uint256",
        name: "positive",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "negative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentProposalId",
        type: "uint256",
      },
      {
        internalType: "enum VotingStatus",
        name: "votingStatus",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "positive",
        type: "bool",
      },
    ],
    name: "votingProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040526201518060005534801561001757600080fd5b50604051610ede380380610ede8339810160408190526100369161005f565b33608052600280546001600160a01b0319166001600160a01b039290921691909117905561008f565b60006020828403121561007157600080fd5b81516001600160a01b038116811461008857600080fd5b9392505050565b608051610e346100aa600039600061045c0152610e346000f3fe60806040526004361061009a5760003560e01c80638a52e73211610069578063d26331d41161004e578063d26331d4146101a6578063f19d40a3146101d8578063fe10226d146101f857600080fd5b80638a52e73214610164578063aade375b1461018457600080fd5b80630e44e636146100e557806319b756d1146100fa5780633ccfd60b1461011a578063441a21eb1461014457600080fd5b366100e0576100de6040518060400160405280600e81526020017f2d2d2d2d2d20726563656976653a00000000000000000000000000000000000081525034610216565b005b600080fd5b3480156100f157600080fd5b506100de61028d565b34801561010657600080fd5b506100de6101153660046109fd565b61034e565b34801561012657600080fd5b5061012f61044f565b60405190151581526020015b60405180910390f35b34801561015057600080fd5b506100de61015f366004610a40565b610519565b34801561017057600080fd5b506100de61017f366004610a78565b610551565b34801561019057600080fd5b5061019961067a565b60405161013b9190610bb1565b3480156101b257600080fd5b506101c66101c1366004610c0f565b61079a565b60405161013b96959493929190610c28565b3480156101e457600080fd5b506101996101f3366004610c0f565b610860565b34801561020457600080fd5b5060015460405190815260200161013b565b610289828260405160240161022c929190610c6c565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052610980565b5050565b6002546001600160a01b031633146102ec5760405162461bcd60e51b815260206004820152600e60248201527f4f4e4c595f50524f504f53494e4700000000000000000000000000000000000060448201526064015b60405180910390fd5b60006102f661067a565b805160208201519192509080821161030f576002610312565b60015b6001805460009081526003602052604090206004018054909160ff199091169083600281111561034457610344610b33565b0217905550505050565b60015460009081526004602090815260408083206001600160a01b038516845290915290205460ff16156103c45760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f564f5445440000000000000000000000000000000000000060448201526064016102e3565b81156103f15760015460009081526003602052604081208054916103e783610c8e565b9190505550610418565b60018054600090815260036020526040812090910180549161041283610c8e565b91905055505b6001805460009081526004602090815260408083206001600160a01b03909516835293905291909120805460ff1916909117905550565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104c95760405162461bcd60e51b815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064016102e3565b604051600090339047908381818185875af1925050503d806000811461050b576040519150601f19603f3d011682016040523d82523d6000602084013e610510565b606091505b50909250505090565b33610524828261034e565b6040517f438332f8bd70311702d09641fdd017ff7c2542114cdb49a4bd01d3c8c656d4c890600090a15050565b6002546001600160a01b031633146105ab5760405162461bcd60e51b815260206004820152600e60248201527f4f4e4c595f50524f504f53494e4700000000000000000000000000000000000060448201526064016102e3565b816001819055506040518060c001604052806000815260200160008152602001428152602001838152602001600060028111156105ea576105ea610b33565b8152602001828152506003600060015481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561065a5761065a610b33565b021790555060a082015160058201906106739082610d3e565b5050505050565b6106826109a1565b6003600060015481526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156106ee576106ee610b33565b60028111156106ff576106ff610b33565b815260200160058201805461071390610cb5565b80601f016020809104026020016040519081016040528092919081815260200182805461073f90610cb5565b801561078c5780601f106107615761010080835404028352916020019161078c565b820191906000526020600020905b81548152906001019060200180831161076f57829003601f168201915b505050505081525050905090565b6003602081905260009182526040909120805460018201546002830154938301546004840154600585018054949693959394929360ff909216926107dd90610cb5565b80601f016020809104026020016040519081016040528092919081815260200182805461080990610cb5565b80156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b5050505050905086565b6108686109a1565b600360008381526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156108d2576108d2610b33565b60028111156108e3576108e3610b33565b81526020016005820180546108f790610cb5565b80601f016020809104026020016040519081016040528092919081815260200182805461092390610cb5565b80156109705780601f1061094557610100808354040283529160200191610970565b820191906000526020600020905b81548152906001019060200180831161095357829003601f168201915b5050505050815250509050919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060c0016040528060008152602001600081526020016000815260200160008152602001600060028111156109db576109db610b33565b8152602001606081525090565b803580151581146109f857600080fd5b919050565b60008060408385031215610a1057600080fd5b610a19836109e8565b915060208301356001600160a01b0381168114610a3557600080fd5b809150509250929050565b600060208284031215610a5257600080fd5b610a5b826109e8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a8b57600080fd5b82359150602083013567ffffffffffffffff80821115610aaa57600080fd5b818501915085601f830112610abe57600080fd5b813581811115610ad057610ad0610a62565b604051601f8201601f19908116603f01168101908382118183101715610af857610af8610a62565b81604052828152886020848701011115610b1157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b60038110610b6757634e487b7160e01b600052602160045260246000fd5b9052565b6000815180845260005b81811015610b9157602081850181015186830182015201610b75565b506000602082860101526020601f19601f83011685010191505092915050565b602081528151602082015260208201516040820152604082015160608201526060820151608082015260006080830151610bee60a0840182610b49565b5060a083015160c080840152610c0760e0840182610b6b565b949350505050565b600060208284031215610c2157600080fd5b5035919050565b868152856020820152846040820152836060820152610c4a6080820184610b49565b60c060a08201526000610c6060c0830184610b6b565b98975050505050505050565b604081526000610c7f6040830185610b6b565b90508260208301529392505050565b600060018201610cae57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610cc957607f821691505b602082108103610ce957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610d3957600081815260208120601f850160051c81016020861015610d165750805b601f850160051c820191505b81811015610d3557828155600101610d22565b5050505b505050565b815167ffffffffffffffff811115610d5857610d58610a62565b610d6c81610d668454610cb5565b84610cef565b602080601f831160018114610da15760008415610d895750858301515b600019600386901b1c1916600185901b178555610d35565b600085815260208120601f198616915b82811015610dd057888601518255948401946001909101908401610db1565b5085821015610dee5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122003374ed1e518bbe598a27d432c3ff8a70a95a6473558364056918f41991644e064736f6c63430008110033";

type GaslessVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaslessVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaslessVoting__factory extends ContractFactory {
  constructor(...args: GaslessVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _gasslessProposing: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GaslessVoting> {
    return super.deploy(
      _gasslessProposing,
      overrides || {}
    ) as Promise<GaslessVoting>;
  }
  getDeployTransaction(
    _gasslessProposing: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gasslessProposing, overrides || {});
  }
  attach(address: string): GaslessVoting {
    return super.attach(address) as GaslessVoting;
  }
  connect(signer: Signer): GaslessVoting__factory {
    return super.connect(signer) as GaslessVoting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaslessVotingInterface {
    return new utils.Interface(_abi) as GaslessVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaslessVoting {
    return new Contract(address, _abi, signerOrProvider) as GaslessVoting;
  }
}
